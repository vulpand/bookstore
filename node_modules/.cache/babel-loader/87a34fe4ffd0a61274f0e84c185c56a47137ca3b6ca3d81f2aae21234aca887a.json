{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/work/bookstore/src/context/CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { mockData } from '../data/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const addToCart = book => {\n    setCart(prevCart => {\n      const existing = prevCart.find(item => item.id === book.id);\n      if (existing) {\n        if (existing.quantity >= book.stock) {\n          alert(`Cannot add more. Only ${book.stock} left in stock.`);\n          return prevCart;\n        }\n        return prevCart.map(item => item.id === book.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      }\n      return [...prevCart, {\n        ...book,\n        quantity: 1\n      }];\n    });\n  };\n  const removeFromCart = id => {\n    setCart(prevCart => prevCart.filter(item => item.id !== id));\n  };\n  const adjustQuantity = (id, quantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === id ? {\n      ...item,\n      quantity: Math.min(quantity, item.stock)\n    } : item));\n  };\n  const submitCart = () => {\n    cart.forEach(item => {\n      const book = mockData.find(b => b.id === item.id);\n      if (book) book.stock -= item.quantity;\n    });\n    setCart([]);\n    alert('Purchase successful!');\n  };\n  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      adjustQuantity,\n      submitCart,\n      totalPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) throw new Error('useCart must be used within a CartProvider');\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","mockData","jsxDEV","_jsxDEV","CartContext","undefined","CartProvider","children","_s","cart","setCart","addToCart","book","prevCart","existing","find","item","id","quantity","stock","alert","map","removeFromCart","filter","adjustQuantity","Math","min","submitCart","forEach","b","totalPrice","reduce","sum","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["/Users/andrei/work/bookstore/src/context/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { mockData } from '../data/mockData';\n\ntype Book = typeof mockData[0];\n\ninterface CartItem extends Book {\n  quantity: number;\n}\n\ninterface CartContextType {\n  cart: CartItem[];\n  addToCart: (book: Book) => void;\n  removeFromCart: (id: number) => void;\n  adjustQuantity: (id: number, quantity: number) => void;\n  submitCart: () => void;\n  totalPrice: number;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [cart, setCart] = useState<CartItem[]>([]);\n\n  const addToCart = (book: Book) => {\n    setCart((prevCart) => {\n      const existing = prevCart.find((item) => item.id === book.id);\n      if (existing) {\n        if (existing.quantity >= book.stock) {\n          alert(`Cannot add more. Only ${book.stock} left in stock.`);\n          return prevCart;\n        }\n        return prevCart.map((item) =>\n          item.id === book.id ? { ...item, quantity: item.quantity + 1 } : item\n        );\n      }\n      return [...prevCart, { ...book, quantity: 1 }];\n    });\n  };\n\n  const removeFromCart = (id: number) => {\n    setCart((prevCart) => prevCart.filter((item) => item.id !== id));\n  };\n\n  const adjustQuantity = (id: number, quantity: number) => {\n    setCart((prevCart) =>\n      prevCart.map((item) =>\n        item.id === id\n          ? { ...item, quantity: Math.min(quantity, item.stock) }\n          : item\n      )\n    );\n  };\n\n  const submitCart = () => {\n    cart.forEach((item) => {\n      const book = mockData.find((b) => b.id === item.id);\n      if (book) book.stock -= item.quantity;\n    });\n    setCart([]);\n    alert('Purchase successful!');\n  };\n\n  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addToCart, removeFromCart, adjustQuantity, submitCart, totalPrice }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) throw new Error('useCart must be used within a CartProvider');\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}