{"version":3,"file":"sourcemap-codec.umd.js","sources":["../src/vlq.ts","../src/scopes.ts","../src/sourcemap-codec.ts"],"sourcesContent":["const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\nexport const comma = ','.charCodeAt(0);\nexport const semicolon = ';'.charCodeAt(0);\n\nexport function hasMoreVlq(mappings: string, i: number, length: number): boolean {\n  if (i >= length) return false;\n  return mappings.charCodeAt(i) !== comma;\n}\n\nexport function indexOf(mappings: string, char: string, index: number): number {\n  const idx = mappings.indexOf(char, index);\n  return idx === -1 ? mappings.length : idx;\n}\n\nexport let posOut = 0;\nexport function resetPos() {\n  posOut = 0;\n}\n\nexport function decodeFirstOctet(mappings: string, pos: number) {\n  const c = mappings.charCodeAt(pos);\n  let value = charToInt[c];\n  const shouldNegate = value & 1;\n  value >>>= 1;\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n  return value;\n}\n\nexport function decodeInteger(mappings: string, pos: number, relative: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = mappings.charCodeAt(pos++);\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  posOut = pos;\n  return relative + value;\n}\n\nexport function encodeInteger(buf: Uint8Array, pos: number, num: number, relative: number): number {\n  let delta = num - relative;\n\n  delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;\n  do {\n    let clamped = delta & 0b011111;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 0b100000;\n    buf[pos++] = intToChar[clamped];\n  } while (delta > 0);\n\n  posOut = pos;\n  return num;\n}\n\nexport function maybeFlush(\n  build: string,\n  buf: Uint8Array,\n  pos: number,\n  copy: Uint8Array,\n  length: number,\n): string {\n  if (pos < length) {\n    posOut = pos;\n    return build;\n  }\n  const out = td.decode(buf);\n  copy.copyWithin(0, length, pos);\n  posOut = pos - length;\n  return build + out;\n}\n\nexport function write(buf: Uint8Array, pos: number, value: number) {\n  buf[pos] = value;\n  posOut = pos + 1;\n}\n\n// Provide a fallback for older environments.\nexport const td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array) {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array) {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n","import {\n  comma,\n  decodeInteger,\n  encodeInteger,\n  hasMoreVlq,\n  indexOf,\n  maybeFlush,\n  posOut,\n  write,\n  td,\n  resetPos,\n  decodeFirstOctet,\n  semicolon,\n} from './vlq';\n\ntype Line = number;\ntype Column = number;\ntype Kind = number;\ntype Name = number;\ntype Var = number;\ntype SourcesIndex = number;\ntype ScopesIndex = number;\n\nexport type OriginalScope =\n  | {\n      0: Line;\n      1: Column;\n      2: Line;\n      3: Column;\n      4: Kind;\n      vars?: Var[];\n      length: 5;\n    }\n  | {\n      0: Line;\n      1: Column;\n      2: Line;\n      3: Column;\n      4: Kind;\n      5: Name;\n      vars?: Var[];\n      length: 6;\n    };\n\nconst NO_NAME = -1;\nconst NO_SOURCE = -1;\n\nexport function decodeOriginalScopes(input: string): OriginalScope[] {\n  let line = 0;\n  const scopes: OriginalScope[] = [];\n  const stack: OriginalScope[] = [];\n\n  for (let i = 0; i < input.length; i = posOut + 1) {\n    line = decodeInteger(input, i, line);\n    const column = decodeInteger(input, posOut, 0);\n\n    if (!hasMoreVlq(input, posOut, input.length)) {\n      const last = stack.pop()!;\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n\n    const kind = decodeInteger(input, posOut, 0);\n    const fields = decodeInteger(input, posOut, 0);\n    const name = fields & 0b0001 ? decodeInteger(input, posOut, 0) : NO_NAME;\n    const scope: OriginalScope =\n      name === NO_NAME ? [line, column, 0, 0, kind] : [line, column, 0, 0, kind, name];\n    scopes.push(scope);\n    stack.push(scope);\n\n    const index = indexOf(input, ',', posOut);\n    if (posOut < index) {\n      const vars: Var[] = [];\n      scope.vars = vars;\n      while (posOut < index) {\n        const varsIndex = decodeInteger(input, posOut, 0);\n        vars.push(varsIndex);\n      }\n    }\n  }\n\n  return scopes;\n}\n\nexport function encodeOriginalScopes(scopes: OriginalScope[]): string {\n  let out = '';\n  if (scopes.length === 0) return out;\n\n  const bufLength = 1024 * 16;\n  const subLength = bufLength - (7 * 6 + 1);\n  const buf = new Uint8Array(bufLength);\n  const sub = buf.subarray(0, subLength);\n  resetPos();\n\n  const endStack: number[] = [];\n  let lastEndLine = scopes[0][2] + 1;\n  let lastEndColumn = scopes[0][3];\n  let line = 0;\n\n  for (let i = 0; i < scopes.length; i++) {\n    const scope = scopes[i];\n    const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind } = scope;\n    const name = scope.length === 6 ? scope[5] : NO_NAME;\n    const vars = 'vars' in scope ? scope.vars! : [];\n\n    out = maybeFlush(out, buf, posOut, buf, bufLength);\n    if (i > 0) write(buf, posOut, comma);\n\n    while (startLine > lastEndLine || (startLine === lastEndLine && startColumn >= lastEndColumn)) {\n      out = maybeFlush(out, sub, posOut, buf, subLength);\n\n      line = encodeInteger(buf, posOut, lastEndLine, line);\n      encodeInteger(buf, posOut, lastEndColumn, 0);\n      write(buf, posOut, comma);\n\n      lastEndColumn = endStack.pop()!;\n      lastEndLine = endStack.pop()!;\n    }\n\n    line = encodeInteger(buf, posOut, startLine, line);\n    encodeInteger(buf, posOut, startColumn, 0);\n    endStack.push(lastEndLine);\n    endStack.push(lastEndColumn);\n    lastEndLine = endLine;\n    lastEndColumn = endColumn;\n\n    encodeInteger(buf, posOut, kind, 0);\n\n    const fields = name === NO_NAME ? 0 : 1;\n    encodeInteger(buf, posOut, fields, 0);\n    if (name !== NO_NAME) encodeInteger(buf, posOut, name, 0);\n\n    for (const v of vars) {\n      out = maybeFlush(out, sub, posOut, buf, subLength);\n      encodeInteger(buf, posOut, v, 0);\n    }\n  }\n  while (endStack.length > 0) {\n    out = maybeFlush(out, sub, posOut, buf, subLength);\n\n    write(buf, posOut, comma);\n    line = encodeInteger(buf, posOut, lastEndLine, line);\n    encodeInteger(buf, posOut, lastEndColumn, 0);\n\n    lastEndColumn = endStack.pop()!;\n    lastEndLine = endStack.pop()!;\n  }\n\n  return out + td.decode(buf.subarray(0, posOut));\n}\n\n// type OptionalFields<T> = {\n// [K in keyof T]: K extends number ? T[K] : never;\n// } & {\n// [K in keyof T]: K extends string ? T[K] : never;\n// };\nexport type GeneratedRange = {\n  0: Line;\n  1: Column;\n  2: Line;\n  3: Column;\n  4: SourcesIndex;\n  5: ScopesIndex;\n  callsite?: CallSite;\n  bindings?: ExpressionBinding[][];\n  isScope?: boolean;\n};\nexport type CallSite = [SourcesIndex, Line, Column];\nexport type ExpressionBinding = [Name] | [Name, Line, Column];\n\nexport function decodeGeneratedRanges(input: string): GeneratedRange[] {\n  let genLine = 0;\n  let genColumn = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n\n  const ranges: GeneratedRange[] = [];\n  const stack: GeneratedRange[] = [];\n  let index = 0;\n  do {\n    const semi = indexOf(input, ';', index);\n    genColumn = 0;\n\n    for (let i = index; i < semi; i = posOut + 1) {\n      genColumn = decodeInteger(input, i, genColumn);\n      if (hasMoreVlq(input, posOut, semi)) {\n        const fields = decodeInteger(input, posOut, 0);\n        let defSourcesIndex = NO_SOURCE;\n        let defScopeIndex = NO_SOURCE;\n\n        if (fields & 0b0001) {\n          defSourcesIndex = decodeInteger(input, posOut, definitionSourcesIndex);\n          if (definitionSourcesIndex !== defSourcesIndex) {\n            definitionScopeIndex = 0;\n            definitionSourcesIndex = defSourcesIndex;\n          }\n          defScopeIndex = definitionScopeIndex = decodeInteger(input, posOut, definitionScopeIndex);\n        }\n\n        const range: GeneratedRange = [genLine, genColumn, 0, 0, defSourcesIndex, defScopeIndex];\n\n        if (fields & 0b0010) {\n          const callSourcesIndex = decodeInteger(input, posOut, callsiteSourcesIndex);\n          const sameSource = callSourcesIndex === callsiteSourcesIndex;\n          const callLine = decodeInteger(input, posOut, sameSource ? callsiteLine : 0);\n          const sameLine = sameSource && callLine === callsiteLine;\n          callsiteColumn = decodeInteger(input, posOut, sameLine ? callsiteColumn : 0);\n\n          callsiteSourcesIndex = callSourcesIndex;\n          callsiteLine = callLine;\n          range.callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n        }\n        if (fields & 0b0100) {\n          range.isScope = true;\n        }\n\n        if (hasMoreVlq(input, posOut, semi)) {\n          const bindings: ExpressionBinding[][] = [];\n          range.bindings = bindings;\n          do {\n            bindingLine = genLine;\n            bindingColumn = genColumn;\n            let name = decodeInteger(input, posOut, 0);\n            const hasExpressions = decodeFirstOctet(input, posOut);\n            const binding: ExpressionBinding[] = [[name]];\n            bindings.push(binding);\n            if (hasExpressions < -1) {\n              const expressionsCount = decodeInteger(input, posOut, 0);\n              for (let i = -1; i > expressionsCount; i--) {\n                const prevBindingLine = bindingLine;\n                bindingLine = decodeInteger(input, posOut, bindingLine);\n                bindingColumn = decodeInteger(\n                  input,\n                  posOut,\n                  bindingLine === prevBindingLine ? bindingColumn : 0,\n                );\n                name = decodeInteger(input, posOut, 0);\n              }\n              binding.push([name, bindingLine, bindingColumn] as ExpressionBinding);\n            }\n          } while (hasMoreVlq(input, posOut, semi));\n        }\n\n        ranges.push(range);\n        stack.push(range);\n      } else {\n        const range = stack.pop()!;\n        range[2] = genLine;\n        range[3] = genColumn;\n      }\n    }\n\n    genLine++;\n    index = semi + 1;\n  } while (index <= input.length);\n\n  return ranges;\n}\n\nexport function encodeGeneratedRanges(ranges: GeneratedRange[]): string {\n  let out = '';\n  if (ranges.length === 0) return out;\n\n  const bufLength = 1024 * 16;\n  const subLength = bufLength - (7 * 7 + 1);\n  const buf = new Uint8Array(bufLength);\n  const sub = buf.subarray(0, subLength);\n  resetPos();\n\n  const endStack: number[] = [];\n  let lastEndLine = ranges[0][2] + 1;\n  let lastEndColumn = ranges[0][3];\n  let line = 0;\n  let genColumn = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  for (let i = 0; i < ranges.length; i++) {\n    const range = ranges[i];\n    const {\n      0: startLine,\n      1: startColumn,\n      2: endLine,\n      3: endColumn,\n      4: defSourcesIndex,\n      5: defScopeIndex,\n    } = range;\n    const isScope = 'isScope' in range && range.isScope;\n    const hasCallsite = 'callsite' in range;\n    const hasBindings = 'bindings' in range;\n\n    while (startLine > lastEndLine || (startLine === lastEndLine && startColumn >= lastEndColumn)) {\n      if (line < lastEndLine) {\n        out = catchupLine(out, buf, bufLength, line, lastEndLine);\n        line = lastEndLine;\n        genColumn = 0;\n      } else {\n        out = maybeFlush(out, buf, posOut, buf, bufLength);\n        write(buf, posOut, comma);\n      }\n      out = maybeFlush(out, sub, posOut, buf, subLength);\n      genColumn = encodeInteger(buf, posOut, lastEndColumn, genColumn);\n\n      lastEndColumn = endStack.pop()!;\n      lastEndLine = endStack.pop()!;\n    }\n    if (line < startLine) {\n      out = catchupLine(out, buf, bufLength, line, startLine);\n      line = startLine;\n      genColumn = 0;\n    } else if (i > 0) {\n      out = maybeFlush(out, buf, posOut, buf, bufLength);\n      write(buf, posOut, comma);\n    }\n\n    out = maybeFlush(out, sub, posOut, buf, subLength);\n    genColumn = encodeInteger(buf, posOut, range[1], genColumn);\n    endStack.push(lastEndLine);\n    endStack.push(lastEndColumn);\n    lastEndLine = endLine;\n    lastEndColumn = endColumn;\n\n    const fields =\n      (defSourcesIndex === NO_SOURCE ? 0 : 0b0001) |\n      (hasCallsite ? 0b0010 : 0) |\n      (isScope ? 0b0100 : 0);\n    encodeInteger(buf, posOut, fields, 0);\n\n    if (defSourcesIndex !== NO_SOURCE) {\n      if (defSourcesIndex !== definitionSourcesIndex) definitionScopeIndex = 0;\n      definitionSourcesIndex = encodeInteger(buf, posOut, defSourcesIndex, definitionSourcesIndex);\n      definitionScopeIndex = encodeInteger(buf, posOut, defScopeIndex, definitionScopeIndex);\n    }\n\n    if (hasCallsite) {\n      const { 0: callSourcesIndex, 1: callLine, 2: callColumn } = range.callsite!;\n      if (callSourcesIndex !== callsiteSourcesIndex) {\n        callsiteLine = 0;\n        callsiteColumn = 0;\n      } else if (callLine !== callsiteLine) {\n        callsiteColumn = 0;\n      }\n      callsiteSourcesIndex = encodeInteger(buf, posOut, callSourcesIndex, callsiteSourcesIndex);\n      callsiteLine = encodeInteger(buf, posOut, callLine, callsiteLine);\n      callsiteColumn = encodeInteger(buf, posOut, callColumn, callsiteColumn);\n    }\n\n    if (hasBindings) {\n      for (const binding of range.bindings!) {\n        out = maybeFlush(out, sub, posOut, buf, subLength);\n        encodeInteger(buf, posOut, binding[0][0], 0);\n        if (binding.length > 1) {\n          encodeInteger(buf, posOut, -binding.length, 0);\n          let bindingStartLine = startLine;\n          let bindingStartColumn = startColumn;\n          for (let i = 1; i < binding.length; i++) {\n            out = maybeFlush(out, sub, posOut, buf, subLength);\n            const expression = binding[i];\n            bindingStartLine = encodeInteger(buf, posOut, expression[1]!, bindingStartLine);\n            bindingStartColumn = encodeInteger(buf, posOut, expression[2]!, bindingStartColumn);\n            encodeInteger(buf, posOut, expression[0]!, 0);\n          }\n        }\n      }\n    }\n  }\n  while (endStack.length > 0) {\n    if (line < lastEndLine) {\n      out = catchupLine(out, buf, bufLength, line, lastEndLine);\n      line = lastEndLine;\n      genColumn = 0;\n    } else {\n      out = maybeFlush(out, buf, posOut, buf, bufLength);\n      write(buf, posOut, comma);\n    }\n    out = maybeFlush(out, sub, posOut, buf, subLength);\n    genColumn = encodeInteger(buf, posOut, lastEndColumn, genColumn);\n\n    lastEndColumn = endStack.pop()!;\n    lastEndLine = endStack.pop()!;\n  }\n\n  return out + td.decode(buf.subarray(0, posOut));\n}\n\nfunction catchupLine(\n  build: string,\n  buf: Uint8Array,\n  bufLength: number,\n  lastLine: number,\n  line: number,\n) {\n  do {\n    build = maybeFlush(build, buf, posOut, buf, bufLength);\n    write(buf, posOut, semicolon);\n  } while (++lastLine < line);\n  return build;\n}\n","import {\n  decodeInteger,\n  encodeInteger,\n  comma,\n  semicolon,\n  hasMoreVlq,\n  posOut,\n  indexOf,\n  td,\n  maybeFlush,\n  write,\n  resetPos,\n} from './vlq';\n\nexport {\n  decodeOriginalScopes,\n  encodeOriginalScopes,\n  decodeGeneratedRanges,\n  encodeGeneratedRanges,\n} from './scopes';\nexport type { OriginalScope, GeneratedRange, CallSite, ExpressionBinding } from './scopes';\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nexport function decode(mappings: string): SourceMapMappings {\n  const decoded: SourceMapMappings = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  let index = 0;\n  do {\n    const semi = indexOf(mappings, ';', index);\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n\n    for (let i = index; i < semi; i = posOut + 1) {\n      let seg: SourceMapSegment;\n\n      genColumn = decodeInteger(mappings, i, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n\n      if (hasMoreVlq(mappings, posOut, semi)) {\n        sourcesIndex = decodeInteger(mappings, posOut, sourcesIndex);\n        sourceLine = decodeInteger(mappings, posOut, sourceLine);\n        sourceColumn = decodeInteger(mappings, posOut, sourceColumn);\n\n        if (hasMoreVlq(mappings, posOut, semi)) {\n          namesIndex = decodeInteger(mappings, posOut, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n\n      line.push(seg);\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    index = semi + 1;\n  } while (index <= mappings.length);\n\n  return decoded;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const bufLength = 1024 * 16;\n  // We can push up to 5 ints, each int can take at most 7 chars, and we\n  // may push a comma.\n  const subLength = bufLength - (7 * 5 + 1);\n  const buf = new Uint8Array(bufLength);\n  const sub = buf.subarray(0, subLength);\n  resetPos();\n  let out = '';\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    out = maybeFlush(out, buf, posOut, buf, bufLength);\n    if (i > 0) write(buf, posOut, semicolon);\n\n    if (line.length === 0) continue;\n\n    genColumn = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      out = maybeFlush(out, sub, posOut, buf, subLength);\n      if (j > 0) write(buf, posOut, comma);\n\n      genColumn = encodeInteger(buf, posOut, segment[0], genColumn);\n\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(buf, posOut, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(buf, posOut, segment[2], sourceLine);\n      sourceColumn = encodeInteger(buf, posOut, segment[3], sourceColumn);\n\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(buf, posOut, segment[4], namesIndex);\n    }\n  }\n\n  return out + td.decode(buf.subarray(0, posOut));\n}\n"],"names":[],"mappings":"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"}